[{"path":"https://systems-methods.github.io/consensusNetR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Mike Mason Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://systems-methods.github.io/consensusNetR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mike Mason. Author, maintainer. Jimmy Fulp. Author. Thomas Corey. Author. Alexandre Alloy. Author.","code":""},{"path":"https://systems-methods.github.io/consensusNetR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mason M, Fulp J, Corey T, Alloy (2023). consensusNetR: R Package combining networks consensus network. R package version 0.0.0.9000, https://github.com/Systems-Methods/consensusNetR.","code":"@Manual{,   title = {consensusNetR: R Package for combining networks into a consensus network},   author = {Mike Mason and Jimmy Fulp and Thomas Corey and Alexandre Alloy},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://github.com/Systems-Methods/consensusNetR}, }"},{"path":"https://systems-methods.github.io/consensusNetR/index.html","id":"consensusnetr","dir":"","previous_headings":"","what":"R Package for combining networks into a consensus network","title":"R Package for combining networks into a consensus network","text":"consensusNetR R Package combining networks consensus network based work Laura Cantini Andrei Zinovyev. addition identifying consensus based correlation community meta-genes (loadings membership scores), also implement methods based overlap.","code":""},{"path":"https://systems-methods.github.io/consensusNetR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Package for combining networks into a consensus network","text":"Install version BMS BioGit : :","code":"remotes::install_github(   repo = \"Systems-Methods/consensusNetR\" ) remotes::install_git(   \"https://github.com/Systems-Methods/consensusNetR\"   )"},{"path":"https://systems-methods.github.io/consensusNetR/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"R Package for combining networks into a consensus network","text":"Please note icWGCNA project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/calc_cor_of_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing cor of cor between study expression data — calc_cor_of_cor","title":"Computing cor of cor between study expression data — calc_cor_of_cor","text":"Computing cor cor study expression data","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/calc_cor_of_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing cor of cor between study expression data — calc_cor_of_cor","text":"","code":"calc_cor_of_cor(ex_list)"},{"path":"https://systems-methods.github.io/consensusNetR/reference/calc_cor_of_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing cor of cor between study expression data — calc_cor_of_cor","text":"ex_list expression datasets","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/calc_cor_of_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing cor of cor between study expression data — calc_cor_of_cor","text":"cor_of_cors","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/compare_networks.html","id":null,"dir":"Reference","previous_headings":"","what":"compare_networks — compare_networks","title":"compare_networks — compare_networks","text":"compare_networks","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/compare_networks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compare_networks — compare_networks","text":"","code":"compare_networks(   net_memb_1,   net_memb_2,   K = 75,   memb_cut = 0.5,   na_flag = c(\"none\", \"both\", \"either\") )"},{"path":"https://systems-methods.github.io/consensusNetR/reference/compare_networks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compare_networks — compare_networks","text":"net_memb_1 net_memb_1 net_memb_2 net_memb_2 K K memb_cut memb_cut na_flag na_flag","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/compare_networks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compare_networks — compare_networks","text":"data.frame: adjRand, cor_of_cor, cor_coph, overlap","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_2Network_RBH_Overlap_Based.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute RBH (reciprocal best hits) for Two Networks based on Overlap of top genes — compute_2Network_RBH_Overlap_Based","title":"Compute RBH (reciprocal best hits) for Two Networks based on Overlap of top genes — compute_2Network_RBH_Overlap_Based","text":"Compute RBH (reciprocal best hits) Two Networks based Overlap top community genes. must row names containing sort common geneID vocabulary, can intersected get common rows.","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_2Network_RBH_Overlap_Based.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute RBH (reciprocal best hits) for Two Networks based on Overlap of top genes — compute_2Network_RBH_Overlap_Based","text":"","code":"compute_2Network_RBH_Overlap_Based(meta_g1, meta_g2, top_n = 50, memb_cut = 0)"},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_2Network_RBH_Overlap_Based.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute RBH (reciprocal best hits) for Two Networks based on Overlap of top genes — compute_2Network_RBH_Overlap_Based","text":"meta_g1 community membership matrix first network. meta_g2 community membership matrix second network. Row names matrices must gene names, column names unique community names. top_n number top genes usin compuitng overlap memb_cut membership threshold stricter thresholding. genes membership score greater threshold used","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_2Network_RBH_Overlap_Based.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute RBH (reciprocal best hits) for Two Networks based on Overlap of top genes — compute_2Network_RBH_Overlap_Based","text":"Matrix rows matching columns meta_g1 columns matching columns meta_g2, values 1 indicating two metagenes hit, 0 indicating .","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_2study_rbh_Correlation_Based.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute correlation based RBH for Two Metagene Datasets — compute_2study_rbh_Correlation_Based","title":"Compute correlation based RBH for Two Metagene Datasets — compute_2study_rbh_Correlation_Based","text":"Computes single network two datasets. must rownames containing sort common geneID vocabulary, can intersected get common rows.","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_2study_rbh_Correlation_Based.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute correlation based RBH for Two Metagene Datasets — compute_2study_rbh_Correlation_Based","text":"","code":"compute_2study_rbh_Correlation_Based(   meta_g1,   meta_g2,   lower_quant = 0,   upper_quant = 1,   max_rank = 1,   abs = FALSE,   sparse = FALSE,   method = \"pearson\" )"},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_2study_rbh_Correlation_Based.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute correlation based RBH for Two Metagene Datasets — compute_2study_rbh_Correlation_Based","text":"meta_g1, meta_g2 metagene matrices two different datasets. Row names matrices must gene names, column names unique metagene names. lower_quant indicates quantile minimum correlation reciprocal best hits find. upper_quant indicates quantile correlations metagene pairing considered \"hit.\" max_rank represents highest column row rankings accepted reciprocal best hits network. Pure reciprocal best hits uses max_rank 1. abs logical, take absolute values correlations? sparse logical, use sparse matrix store network? method string, stats::cor()","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_2study_rbh_Correlation_Based.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute correlation based RBH for Two Metagene Datasets — compute_2study_rbh_Correlation_Based","text":"Matrix rows matching columns meta_g1 columns matching columns meta_g2, values 1 indicating two metagenes hit, 0 indicating .","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_2study_rbh_Correlation_Based.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute correlation based RBH for Two Metagene Datasets — compute_2study_rbh_Correlation_Based","text":"one wants reciprocal best hits network separate dimension names rows columns, column names meta_g1 meta_g2 distinct.","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_2study_rbh_Correlation_Based.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute correlation based RBH for Two Metagene Datasets — compute_2study_rbh_Correlation_Based","text":"","code":"if (FALSE) { network_file_dir <- system.file(\"extdata\", package = \"consensusNetR\") network_file_list <- list.files(network_file_dir, full.names = TRUE) ds1 <- as.matrix(data.table::fread(network_file_list[[1]])) row.names(ds1) <- ds1[, 1] ds1 <- ds1[, -1] colnames(ds1) <- paste0(colnames(ds1), sub(   \".*/\", \"\",   network_file_list[[1]] ))  ds2 <- as.matrix(data.table::fread(network_file_list[[2]])) row.names(ds2) <- ds2[, 1] ds2 <- ds2[, -1] colnames(ds2) <- paste0(colnames(ds2), sub(   \".*/\", \"\",   network_file_list[[2]] )) rbh <- compute_2study_rbh_Correlation_Based(ds1, ds2) }"},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_mean_meta_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the average metagene across studies for each community — compute_mean_meta_genes","title":"Compute the average metagene across studies for each community — compute_mean_meta_genes","text":"Compute average metagene across studies community","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_mean_meta_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the average metagene across studies for each community — compute_mean_meta_genes","text":"","code":"compute_mean_meta_genes(   consensus,   network_membership_list,   weights = NULL,   gene_cohort_N = 3,   compressIntra = \"first\" )"},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_mean_meta_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the average metagene across studies for each community — compute_mean_meta_genes","text":"consensus communities output MCL::mcl(), list containing element $Cluster vector cluster associated index. network_membership_list list containing community membership scores network. rownames contain unique gene ids column names community names weights weights weighted average based study attributes, yet implemented gene_cohort_N gene_cohort_N compressIntra indicates deal multiple metagenes belonging community within one study-level network","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_mean_meta_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the average metagene across studies for each community — compute_mean_meta_genes","text":"matrix average loadings (metagenes) across studies included network_file_list","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/compute_mean_meta_genes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the average metagene across studies for each community — compute_mean_meta_genes","text":"","code":"if (FALSE) { network_file_dir <- system.file(\"extdata\", package = \"consensusNetR\") network_file_list <- list.files(network_file_dir, full.names = TRUE) ma <- construct_multi_rbh_correlation_based(   network_file_list = network_file_list,   upper_quant = .99,   lower_quant = .05, max_rank = 2 ) comms <- detect_metagene_communities(ma) compute_mean_meta_genes(comms,ma,network_file_list = network_file_list) }"},{"path":"https://systems-methods.github.io/consensusNetR/reference/construct_multi_rbh_correlation_based.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Meta Reciprocal Best Hits based on correlations — construct_multi_rbh_correlation_based","title":"Construct Meta Reciprocal Best Hits based on correlations — construct_multi_rbh_correlation_based","text":"Iterate list membership matrices construct pairwise networks every combination, output symmetric matrix labeled dimensions. can interpreted \"adjacency\" matrix different metagenes across datasets file list. dimension names take original dimension names concatenate unique file names, dimension names guaranteed unique.","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/construct_multi_rbh_correlation_based.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Meta Reciprocal Best Hits based on correlations — construct_multi_rbh_correlation_based","text":"","code":"construct_multi_rbh_correlation_based(   network_membership_list,   lower_quant = 0,   upper_quant = 1,   max_rank = 1,   abs = FALSE,   sparse = FALSE,   method = \"pearson\",   binary = FALSE )"},{"path":"https://systems-methods.github.io/consensusNetR/reference/construct_multi_rbh_correlation_based.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Meta Reciprocal Best Hits based on correlations — construct_multi_rbh_correlation_based","text":"network_membership_list list containing community membership scores network. rownames contain unique gene ids column names commuity names lower_quant indicates quantile minimum correlation reciprocal best hits find. upper_quant indicates quantile correlations metagene pairing considered \"hit.\" max_rank represents highest column row rankings accepted reciprocal best hits network. Pure reciprocal best hits uses max_rank 1. abs logical, take absolute values correlations? sparse logical, use sparse matrix store network? method string, stats::cor() binary logical, indicates whether meta residual best hits matrix show correlations simply binary (.numeric(correlation > 0)) output","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/construct_multi_rbh_correlation_based.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Meta Reciprocal Best Hits based on correlations — construct_multi_rbh_correlation_based","text":"reciprocal best hits matrix metagenes across datasets specified files, dimensions named uniquely based file column names well file names (ensure uniqueness).","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/construct_multi_rbh_correlation_based.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Meta Reciprocal Best Hits based on correlations — construct_multi_rbh_correlation_based","text":"","code":"if (FALSE) { network_file_dir <- system.file(\"extdata\", package = \"consensusNetR\") network_file_list <- list.files(network_file_dir, full.names = TRUE) ma <- construct_multi_rbh_correlation_based( network_file_list = network_file_list,   upper_quant = .99, lower_quant = .05, max_rank = 2)   }"},{"path":"https://systems-methods.github.io/consensusNetR/reference/construct_multi_rbh_overlap_based.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Meta Reciprocal Best Hits based on overlaps — construct_multi_rbh_overlap_based","title":"Construct Meta Reciprocal Best Hits based on overlaps — construct_multi_rbh_overlap_based","text":"Iterate list containing membership matrices construct pairwise networks every combination, output symmetric matrix labeled dimensions. can interpreted \"adjacency\" matrix different metagenes across networks input list. column/row names take networks communities' names concatenate network list names, dimension names guaranteed unique.","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/construct_multi_rbh_overlap_based.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Meta Reciprocal Best Hits based on overlaps — construct_multi_rbh_overlap_based","text":"","code":"construct_multi_rbh_overlap_based(   network_membership_list,   top_n = 50,   memb_cut = 0 )"},{"path":"https://systems-methods.github.io/consensusNetR/reference/construct_multi_rbh_overlap_based.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Meta Reciprocal Best Hits based on overlaps — construct_multi_rbh_overlap_based","text":"network_membership_list list containing community membership scores network. rownames contain unique gene ids column names commuity names top_n number top genes based membership scores higher scores indicating stronger membership community memb_cut membership threshold stricter thresholding. genes membership score greater threshold used","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/construct_multi_study_rbh.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper function multi_rbh_overlap_based or construct_multi_rbh_correlation_based — construct_multi_study_rbh","title":"Wrapper function multi_rbh_overlap_based or construct_multi_rbh_correlation_based — construct_multi_study_rbh","text":"Wrapper function multi_rbh_overlap_based construct_multi_rbh_correlation_based","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/construct_multi_study_rbh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper function multi_rbh_overlap_based or construct_multi_rbh_correlation_based — construct_multi_study_rbh","text":"","code":"construct_multi_study_rbh(   network_membership_list,   method = c(\"overlap\", \"pearson\", \"spearman\"),   top_n = 50,   memb_cut = 0,   lower_quant = 0,   upper_quant = 1,   max_rank = 1,   abs = FALSE,   sparse = FALSE,   binary = FALSE )"},{"path":"https://systems-methods.github.io/consensusNetR/reference/construct_multi_study_rbh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper function multi_rbh_overlap_based or construct_multi_rbh_correlation_based — construct_multi_study_rbh","text":"network_membership_list list containing community membership scores network. rownames contain unique gene ids column method overlap, pearson, spearman top_n number top genes based membership scores higher scores indicating stronger membership community memb_cut membership threshold stricter thresholding. genes membership score greater threshold used lower_quant indicates quantile minimum correlation reciprocal best hits find. upper_quant indicates quantile correlations metagene pairing considered \"hit.\" max_rank represents highest column row rankings accepted reciprocal best hits network. Pure reciprocal best hits uses max_rank 1. abs logical, take absolute values correlations? sparse logical, use sparse matrix store network? binary logical, indicates whether meta residual best hits matrix show correlations simply binary (.numeric(correlation > 0)) output","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/construct_multi_study_rbh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper function multi_rbh_overlap_based or construct_multi_rbh_correlation_based — construct_multi_study_rbh","text":"reciprocal best hits matrix metagenes across datasets specified files, dimensions named uniquely based file column names well file names (ensure uniqueness).","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/construct_multi_study_rbh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper function multi_rbh_overlap_based or construct_multi_rbh_correlation_based — construct_multi_study_rbh","text":"top_n memb_cut arguments used method = \"overlap\" arguments used method \"pearson\" \"spearman\".","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/detect_metagene_communities.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Communities in Adjacency/Reciprocal Best Hits Matrix — detect_metagene_communities","title":"Detect Communities in Adjacency/Reciprocal Best Hits Matrix — detect_metagene_communities","text":"Performs Markov Clustering adjacency matrix, giving cluster/community number metagene associated , renamed clusters order size (1 largest)","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/detect_metagene_communities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Communities in Adjacency/Reciprocal Best Hits Matrix — detect_metagene_communities","text":"","code":"detect_metagene_communities(rbh_mat, expansion = 2)"},{"path":"https://systems-methods.github.io/consensusNetR/reference/detect_metagene_communities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Communities in Adjacency/Reciprocal Best Hits Matrix — detect_metagene_communities","text":"rbh_mat adjacency/reciprocal best hits matrix, output construct_multi_rbh_correlation_based() expansion expansion parameter","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/detect_metagene_communities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Communities in Adjacency/Reciprocal Best Hits Matrix — detect_metagene_communities","text":"output MCL::mcl(), renamed clusters order size (1 largest)","code":""},{"path":[]},{"path":"https://systems-methods.github.io/consensusNetR/reference/find_unique_top_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Top Gene of Communities that are unique (only belong to one community) — find_unique_top_genes","title":"Identify Top Gene of Communities that are unique (only belong to one community) — find_unique_top_genes","text":"Identify Top Gene Communities unique (belong one community)","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/find_unique_top_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Top Gene of Communities that are unique (only belong to one community) — find_unique_top_genes","text":"","code":"find_unique_top_genes(mGenes, K = 10, max_iter = 10)"},{"path":"https://systems-methods.github.io/consensusNetR/reference/find_unique_top_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Top Gene of Communities that are unique (only belong to one community) — find_unique_top_genes","text":"mGenes meta gene matrix rownames gene IDs columns community loadings (.e. metagenes). K number unique genes find. max_iter maximum number iterations avoid looping meaningless top genes","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/find_unique_top_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Top Gene of Communities that are unique (only belong to one community) — find_unique_top_genes","text":"data.frame key = community value = top gene ID. Top genes associated one module.","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/get_gene_community_membership.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Consensus Membership of Genes in Metagene Communities — get_gene_community_membership","title":"Get Consensus Membership of Genes in Metagene Communities — get_gene_community_membership","text":"Get Consensus Membership Genes Metagene Communities","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/get_gene_community_membership.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Consensus Membership of Genes in Metagene Communities — get_gene_community_membership","text":"","code":"get_gene_community_membership(   comms,   min_studies,   network_file_list = list(),   network_file_dir = NULL,   include_nonmembers = FALSE,   compress = TRUE,   rank_based = TRUE )"},{"path":"https://systems-methods.github.io/consensusNetR/reference/get_gene_community_membership.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Consensus Membership of Genes in Metagene Communities — get_gene_community_membership","text":"comms communities output MCL::mcl, list containing element $Cluster vector cluster associated index. min_studies minimum threshold studies/datasets indicating gene belongs community. given dataset, gene \"belongs\" community gene's highest loading corresponds community. network_file_list network_file_list network_file_dir network_file_dir include_nonmembers include_nonmembers appear community. compress indicates whether drop duplicate community metagenes. Assumes first one one keep (largest best). Currently TRUE supported rank_based flag indicating whether use rank determing max metagene. Currently TRUE supported","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/get_gene_community_membership.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Consensus Membership of Genes in Metagene Communities — get_gene_community_membership","text":"data.frame containing gene ids associated likely cluster(s) $cluster $n_studies, representing number studies datasets indicating gene belongs associated community. given dataset, gene \"belongs\" community gene's highest loading corresponds community.","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/get_gene_community_membership.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Consensus Membership of Genes in Metagene Communities — get_gene_community_membership","text":"","code":"if (FALSE) { network_file_dir <- system.file(\"extdata\", package = \"consensusNetR\") network_file_list <- list.files(network_file_dir, full.names = TRUE) ma <- construct_multi_rbh_correlation_based(   network_file_list = network_file_list,   upper_quant = .99,   lower_quant = .05, max_rank = 2 ) comms <- detect_metagene_communities(ma) consensus <- get_gene_community_membership(comms, 2,   network_file_dir = network_file_dir ) }"},{"path":"https://systems-methods.github.io/consensusNetR/reference/plot_consensus_eig_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot individual eigengene distributions — plot_consensus_eig_dist","title":"Plot individual eigengene distributions — plot_consensus_eig_dist","text":"Plot individual eigengene distributions","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/plot_consensus_eig_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot individual eigengene distributions — plot_consensus_eig_dist","text":"","code":"plot_consensus_eig_dist(   eigen_list,   target_study_index = 1,   filename = NA,   width = 12,   height = 10,   dpi = 1000 )"},{"path":"https://systems-methods.github.io/consensusNetR/reference/plot_consensus_eig_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot individual eigengene distributions — plot_consensus_eig_dist","text":"eigen_list eigen_list target_study_index target_study_index filename File name width figure width height figure height dpi Plot resolution. Also accepts string input: \"retina\" (320), \"print\" (300), \"screen\" (72). Applies raster output types.","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/plot_consensus_eig_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot individual eigengene distributions — plot_consensus_eig_dist","text":"eigengene distributions filename na, saved figure filename provided","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/plot_rbh.html","id":null,"dir":"Reference","previous_headings":"","what":"RBH Heatmap Creation — plot_rbh","title":"RBH Heatmap Creation — plot_rbh","text":"RBH Heatmap Creation","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/plot_rbh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RBH Heatmap Creation — plot_rbh","text":"","code":"plot_rbh(rbh, memb_list, file_name = NA, width = 10, height = 8)"},{"path":"https://systems-methods.github.io/consensusNetR/reference/plot_rbh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RBH Heatmap Creation — plot_rbh","text":"rbh reciprocal best hits matrix (output construct_multi_study_rbh()) memb_list memb_list? file_name File name width figure width height figure height","code":""},{"path":"https://systems-methods.github.io/consensusNetR/reference/plot_rbh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RBH Heatmap Creation — plot_rbh","text":"pheatmap object","code":""}]
